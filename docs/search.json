[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello!! My name is Muhammet. This is my personal webpage. I’m interested in data analytics. Please stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project X",
    "section": "",
    "text": "Welcome to my project page.\nKeep an eye on this space to stay updated with my project activities.\n(The titles below are provided as examples; please feel free to adjust them as necessary.)"
  },
  {
    "objectID": "project.html#data-source",
    "href": "project.html#data-source",
    "title": "Project X",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nxxxxxx"
  },
  {
    "objectID": "project.html#general-information-about-data",
    "href": "project.html#general-information-about-data",
    "title": "Project X",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nxxxxxx"
  },
  {
    "objectID": "project.html#reason-of-choice",
    "href": "project.html#reason-of-choice",
    "title": "Project X",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nxxxxxx"
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "Project X",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nxxxxxx"
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "Project X",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "Project X",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "Project X",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "Project X",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Spring 2024] EMU660 Decision Making with Analytics course.\nPlease use left menu to navigate through my assignments.\n\n\n\n Back to top",
    "crumbs": [
      "My Assignments"
    ]
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nZiraat Bankasi A.S., Assistant IT Auditor, 2014-2016\nMinistry of Trade, Engineer, 2016-2018\nPresidency Of Strategy and Budget, Specialist, 2018-Ongoing"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm aaa, position xx, year xxx\nFirm bbb, position yyy, year yyy"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/assignments/assignment-1.html",
    "href": "docs/assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts.\n\n\n\n\n\n\n\n\n\ncustom_function &lt;- function(data){\n  if(!is.vector(data)){\n    print(\"Girdi vektor olmalidir.\")}\n  else {\n    average&lt;-mean(data)\n    max&lt;-max(data)\n    min&lt;-min(data)\n    sd&lt;-sd(data)\n    data_list &lt;- list(avg=average,max=max,min=min,sd=sd)\n    return(data_list)}\n}\n\n\nfor (i in colnames(mtcars) ){\n  cars_attributes &lt;- c(mtcars[[i]])\n  result1&lt;-custom_function(cars_attributes)\n  result2&lt;-paste(i,names(result1),result1)\n  print(result2)\n}\n\n[1] \"mpg avg 20.090625\"      \"mpg max 33.9\"           \"mpg min 10.4\"          \n[4] \"mpg sd 6.0269480520891\"\n[1] \"cyl avg 6.1875\"          \"cyl max 8\"              \n[3] \"cyl min 4\"               \"cyl sd 1.78592164694654\"\n[1] \"disp avg 230.721875\"      \"disp max 472\"            \n[3] \"disp min 71.1\"            \"disp sd 123.938693831382\"\n[1] \"hp avg 146.6875\"        \"hp max 335\"             \"hp min 52\"             \n[4] \"hp sd 68.5628684893206\"\n[1] \"drat avg 3.5965625\"        \"drat max 4.93\"            \n[3] \"drat min 2.76\"             \"drat sd 0.534678736070971\"\n[1] \"wt avg 3.21725\"          \"wt max 5.424\"           \n[3] \"wt min 1.513\"            \"wt sd 0.978457442989697\"\n[1] \"qsec avg 17.84875\"        \"qsec max 22.9\"           \n[3] \"qsec min 14.5\"            \"qsec sd 1.78694323609684\"\n[1] \"vs avg 0.4375\"           \"vs max 1\"               \n[3] \"vs min 0\"                \"vs sd 0.504016128774185\"\n[1] \"am avg 0.40625\"          \"am max 1\"               \n[3] \"am min 0\"                \"am sd 0.498990917235846\"\n[1] \"gear avg 3.6875\"           \"gear max 5\"               \n[3] \"gear min 3\"                \"gear sd 0.737804065256947\"\n[1] \"carb avg 2.8125\"          \"carb max 8\"              \n[3] \"carb min 1\"               \"carb sd 1.61519997763185\"\n\n\n\n\n\n\ncustom_function &lt;- function(data){\n  if(!is.vector(data)){\n    print(\"Girdi vektor olmalidir.\")}\n  else {\n    average&lt;-mean(data)\n    max&lt;-max(data)\n    min&lt;-min(data)\n    sd&lt;-sd(data)\n    data_list &lt;- list(avg=average,max=max,min=min,sd=sd)\n    return(data_list)}\n}\nprint(apply(mtcars,2,custom_function))\n\n$mpg\n$mpg$avg\n[1] 20.09062\n\n$mpg$max\n[1] 33.9\n\n$mpg$min\n[1] 10.4\n\n$mpg$sd\n[1] 6.026948\n\n\n$cyl\n$cyl$avg\n[1] 6.1875\n\n$cyl$max\n[1] 8\n\n$cyl$min\n[1] 4\n\n$cyl$sd\n[1] 1.785922\n\n\n$disp\n$disp$avg\n[1] 230.7219\n\n$disp$max\n[1] 472\n\n$disp$min\n[1] 71.1\n\n$disp$sd\n[1] 123.9387\n\n\n$hp\n$hp$avg\n[1] 146.6875\n\n$hp$max\n[1] 335\n\n$hp$min\n[1] 52\n\n$hp$sd\n[1] 68.56287\n\n\n$drat\n$drat$avg\n[1] 3.596563\n\n$drat$max\n[1] 4.93\n\n$drat$min\n[1] 2.76\n\n$drat$sd\n[1] 0.5346787\n\n\n$wt\n$wt$avg\n[1] 3.21725\n\n$wt$max\n[1] 5.424\n\n$wt$min\n[1] 1.513\n\n$wt$sd\n[1] 0.9784574\n\n\n$qsec\n$qsec$avg\n[1] 17.84875\n\n$qsec$max\n[1] 22.9\n\n$qsec$min\n[1] 14.5\n\n$qsec$sd\n[1] 1.786943\n\n\n$vs\n$vs$avg\n[1] 0.4375\n\n$vs$max\n[1] 1\n\n$vs$min\n[1] 0\n\n$vs$sd\n[1] 0.5040161\n\n\n$am\n$am$avg\n[1] 0.40625\n\n$am$max\n[1] 1\n\n$am$min\n[1] 0\n\n$am$sd\n[1] 0.4989909\n\n\n$gear\n$gear$avg\n[1] 3.6875\n\n$gear$max\n[1] 5\n\n$gear$min\n[1] 3\n\n$gear$sd\n[1] 0.7378041\n\n\n$carb\n$carb$avg\n[1] 2.8125\n\n$carb$max\n[1] 8\n\n$carb$min\n[1] 1\n\n$carb$sd\n[1] 1.6152\n\n\n\n\n\n\nlibrary(dslabs)\n\nWarning: package 'dslabs' was built under R version 4.2.3\n\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nNa_count&lt;-sum(is.na(na_example))\nNa_count\n\n[1] 145\n\ndata_na &lt;- replace(na_example, is.na(na_example), 660)\ndata_na\n\n   [1]   2   1   3   2   1   3   1   4   3   2   2 660   2   2   1   4 660   1\n  [19]   1   2   1   2   2   1   2   5 660   2   2   3   1   2   4   1   1   1\n  [37]   4   5   2   3   4   1   2   4   1   1   2   1   5 660 660 660   1   1\n  [55]   5   1   3   1 660   4   4   7   3   2 660 660   1 660   4   1   2   2\n  [73]   3   2   1   2   2   4   3   4   2   3   1   3   2   1   1   1   3   1\n  [91] 660   3   1   2   2   1   2   2   1   1   4   1   1   2   3   3   2   2\n [109]   3   3   3   4   1   1   1   2 660   4   3   4   3   1   2   1 660 660\n [127] 660 660   1   5   1   2   1   3   5   3   2   2 660 660 660 660   3   5\n [145]   3   1   1   4   2   4   3   3 660   2   3   2   6 660   1   1   2   2\n [163]   1   3   1   1   5 660 660   2   4 660   2   5   1   4   3   3 660   4\n [181]   3   1   4   1   1   3   1   1 660 660   3   5   2   2   2   3   1   2\n [199]   2   3   2   1 660   2 660   1 660 660   2   1   1 660   3 660   1   2\n [217]   2   1   3   2   2   1   1   2   3   1   1   1   4   3   4   2   2   1\n [235]   4   1 660   5   1   4 660   3 660 660   1   1   5   2   3   3   2   4\n [253] 660   3   2   5 660   2   3   4   6   2   2   2 660   2 660   2 660   3\n [271]   3   2   2   4   3   1   4   2 660   2   4 660   6   2   3   1 660   2\n [289]   2 660   1   1   3   2   3   3   1 660   1   4   2   1   1   3   2   1\n [307]   2   3   1 660   2   3   3   2   1   2   3   5   5   1   2   3   3   1\n [325] 660 660   1   2   4 660   2   1   1   1   3   2   1   1   3   4 660   1\n [343]   2   1   1   3   3 660   1   1   3   5   3   2   3   4   1   4   3   1\n [361] 660   2   1   2   2   1   2   2   6   1   2   4   5 660   3   4   2   1\n [379]   1   4   2   1   1   1   1   2   1   4   4   1   3 660   3   3 660   2\n [397] 660   1   2   1   1   4   2   1   4   4 660   1   2 660   3   2   2   2\n [415]   1   4   3   6   1   2   3   1   3   2   2   2   1   1   3   2   1   1\n [433]   1   3   2   2 660   4   4   4   1   1 660   4   3 660   1   3   1   3\n [451]   2   4   2   2   2   3   2   1   4   3 660   1   4   3   1   3   2 660\n [469]   3 660   1   3   1   4   1   1   1   2   4   3   1   2   2   2   3   2\n [487]   3   1   1 660   3   2   1   1   2 660   2   2   2   3   3   1   1   2\n [505] 660   1   2   1   1   3   3   1   3   1   1   1   1   1   2   5   1   1\n [523]   2   2   1   1 660   1   4   1   2   4   1   3   2 660   1   1 660   2\n [541]   1   1   4   2   3   3   1   5   3   1   1   2 660   1   1   3   1   3\n [559]   2   4 660   2   3   2   1   2   1   1   1   2   2   3   1   5   2 660\n [577]   2 660   3   2   2   2   1   5   3   2   3   1 660   3   1   2   2   2\n [595]   1   2   2   4 660   6   1   2 660   1   1   2   2   3 660   3   2   3\n [613]   3   4   2 660   2 660   4 660   1   1   2   2   3   1   1   1   3 660\n [631]   2   5 660   7   1 660   4   3   3   1 660   1   1   1   1   3   2   4\n [649]   2   2   3 660 660   1   4   3   2   2   2   3   2   4   2   2   4 660\n [667] 660 660   6   3   3   1   4   4   2   1 660   1   6 660   3   3   2   1\n [685]   1   6 660   1   5   1 660   2   6   2 660   4   1   3   1   2 660   1\n [703]   1   3   1   2   4   2   1   3   2   4   3   2   2   1   1   5   6   4\n [721]   2   2   2   2   4 660   1   2   2   2   2   4   5 660 660 660   4   3\n [739]   3   3   2   4   2   4 660 660 660 660   2   1 660   2   4   3   2 660\n [757]   2   3   1   3   4 660   1   2   1   2 660   3   1   2   1   2   1   2\n [775]   1   2   2   2   2   1   1   3   3   1   3   4   3 660 660   4   2   3\n [793]   2   1   3   2   4   2   2   3   1   2   4   3   3   4 660   1   4   2\n [811]   1   1   1   3   1   5   2   2   4   2 660   1   3   1   2 660   1   2\n [829]   1   2   1 660   1   3   2   3   2 660   2   1   4   2 660 660 660   2\n [847]   4   2 660 660   3   1 660   5   5   2   2   2 660   2   1   3   1   3\n [865]   2   4   2   4 660   4   1   2   3   2   3   3   2   3   2   2   2   1\n [883]   3   2   4   2 660   3   3   2   2 660 660   3   2   1   2   4   1   1\n [901]   1   1   4   3   2 660   3   2 660   1 660   3   2   1   1   1   2 660\n [919]   2   2   3   3   2 660 660   4   5   2   2   2   1   2   3   1   3   3\n [937]   4   3 660   1   1   1 660   4   3   5   1   1   2 660   2   2   2   2\n [955]   5   2   2   3   1   2   3 660   1   2 660 660   2 660   3   1   1   2\n [973]   5   3   5   1   1   4 660   2   1   3   1   1   2   4   3   3   3 660\n [991]   1   1   2   2   1   1   2   2 660   2\n\nNa_count2&lt;-sum(is.na(data_na))\nNa_count2\n\n[1] 0\n\ncount_660 &lt;- sum(data_na==660)\ncount_660\n\n[1] 145",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Download CV"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "",
    "text": "custom_function &lt;- function(data){\n  if(!is.vector(data)){\n    print(\"Girdi vektor olmalidir.\")}\n  else {\n    average&lt;-mean(data)\n    max&lt;-max(data)\n    min&lt;-min(data)\n    sd&lt;-sd(data)\n    data_list &lt;- list(avg=average,max=max,min=min,sd=sd)\n    return(data_list)}\n}\n\n\nfor (i in colnames(mtcars) ){\n  cars_attributes &lt;- c(mtcars[[i]])\n  result1&lt;-custom_function(cars_attributes)\n  result2&lt;-paste(i,names(result1),result1)\n  print(result2)\n}\n\n[1] \"mpg avg 20.090625\"      \"mpg max 33.9\"           \"mpg min 10.4\"          \n[4] \"mpg sd 6.0269480520891\"\n[1] \"cyl avg 6.1875\"          \"cyl max 8\"              \n[3] \"cyl min 4\"               \"cyl sd 1.78592164694654\"\n[1] \"disp avg 230.721875\"      \"disp max 472\"            \n[3] \"disp min 71.1\"            \"disp sd 123.938693831382\"\n[1] \"hp avg 146.6875\"        \"hp max 335\"             \"hp min 52\"             \n[4] \"hp sd 68.5628684893206\"\n[1] \"drat avg 3.5965625\"        \"drat max 4.93\"            \n[3] \"drat min 2.76\"             \"drat sd 0.534678736070971\"\n[1] \"wt avg 3.21725\"          \"wt max 5.424\"           \n[3] \"wt min 1.513\"            \"wt sd 0.978457442989697\"\n[1] \"qsec avg 17.84875\"        \"qsec max 22.9\"           \n[3] \"qsec min 14.5\"            \"qsec sd 1.78694323609684\"\n[1] \"vs avg 0.4375\"           \"vs max 1\"               \n[3] \"vs min 0\"                \"vs sd 0.504016128774185\"\n[1] \"am avg 0.40625\"          \"am max 1\"               \n[3] \"am min 0\"                \"am sd 0.498990917235846\"\n[1] \"gear avg 3.6875\"           \"gear max 5\"               \n[3] \"gear min 3\"                \"gear sd 0.737804065256947\"\n[1] \"carb avg 2.8125\"          \"carb max 8\"              \n[3] \"carb min 1\"               \"carb sd 1.61519997763185\"\n\n\n\n\n\n\ncustom_function &lt;- function(data){\n  if(!is.vector(data)){\n    print(\"Girdi vektor olmalidir.\")}\n  else {\n    average&lt;-mean(data)\n    max&lt;-max(data)\n    min&lt;-min(data)\n    sd&lt;-sd(data)\n    data_list &lt;- list(avg=average,max=max,min=min,sd=sd)\n    return(data_list)}\n}\nprint(apply(mtcars,2,custom_function))\n\n$mpg\n$mpg$avg\n[1] 20.09062\n\n$mpg$max\n[1] 33.9\n\n$mpg$min\n[1] 10.4\n\n$mpg$sd\n[1] 6.026948\n\n\n$cyl\n$cyl$avg\n[1] 6.1875\n\n$cyl$max\n[1] 8\n\n$cyl$min\n[1] 4\n\n$cyl$sd\n[1] 1.785922\n\n\n$disp\n$disp$avg\n[1] 230.7219\n\n$disp$max\n[1] 472\n\n$disp$min\n[1] 71.1\n\n$disp$sd\n[1] 123.9387\n\n\n$hp\n$hp$avg\n[1] 146.6875\n\n$hp$max\n[1] 335\n\n$hp$min\n[1] 52\n\n$hp$sd\n[1] 68.56287\n\n\n$drat\n$drat$avg\n[1] 3.596563\n\n$drat$max\n[1] 4.93\n\n$drat$min\n[1] 2.76\n\n$drat$sd\n[1] 0.5346787\n\n\n$wt\n$wt$avg\n[1] 3.21725\n\n$wt$max\n[1] 5.424\n\n$wt$min\n[1] 1.513\n\n$wt$sd\n[1] 0.9784574\n\n\n$qsec\n$qsec$avg\n[1] 17.84875\n\n$qsec$max\n[1] 22.9\n\n$qsec$min\n[1] 14.5\n\n$qsec$sd\n[1] 1.786943\n\n\n$vs\n$vs$avg\n[1] 0.4375\n\n$vs$max\n[1] 1\n\n$vs$min\n[1] 0\n\n$vs$sd\n[1] 0.5040161\n\n\n$am\n$am$avg\n[1] 0.40625\n\n$am$max\n[1] 1\n\n$am$min\n[1] 0\n\n$am$sd\n[1] 0.4989909\n\n\n$gear\n$gear$avg\n[1] 3.6875\n\n$gear$max\n[1] 5\n\n$gear$min\n[1] 3\n\n$gear$sd\n[1] 0.7378041\n\n\n$carb\n$carb$avg\n[1] 2.8125\n\n$carb$max\n[1] 8\n\n$carb$min\n[1] 1\n\n$carb$sd\n[1] 1.6152",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#c",
    "href": "assignments/assignment-1.html#c",
    "title": "Assignment 1",
    "section": "",
    "text": "library(dslabs)\n\nWarning: package 'dslabs' was built under R version 4.2.3\n\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nNa_count&lt;-sum(is.na(na_example))\nNa_count\n\n[1] 145\n\ndata_na &lt;- replace(na_example, is.na(na_example), 660)\ndata_na\n\n   [1]   2   1   3   2   1   3   1   4   3   2   2 660   2   2   1   4 660   1\n  [19]   1   2   1   2   2   1   2   5 660   2   2   3   1   2   4   1   1   1\n  [37]   4   5   2   3   4   1   2   4   1   1   2   1   5 660 660 660   1   1\n  [55]   5   1   3   1 660   4   4   7   3   2 660 660   1 660   4   1   2   2\n  [73]   3   2   1   2   2   4   3   4   2   3   1   3   2   1   1   1   3   1\n  [91] 660   3   1   2   2   1   2   2   1   1   4   1   1   2   3   3   2   2\n [109]   3   3   3   4   1   1   1   2 660   4   3   4   3   1   2   1 660 660\n [127] 660 660   1   5   1   2   1   3   5   3   2   2 660 660 660 660   3   5\n [145]   3   1   1   4   2   4   3   3 660   2   3   2   6 660   1   1   2   2\n [163]   1   3   1   1   5 660 660   2   4 660   2   5   1   4   3   3 660   4\n [181]   3   1   4   1   1   3   1   1 660 660   3   5   2   2   2   3   1   2\n [199]   2   3   2   1 660   2 660   1 660 660   2   1   1 660   3 660   1   2\n [217]   2   1   3   2   2   1   1   2   3   1   1   1   4   3   4   2   2   1\n [235]   4   1 660   5   1   4 660   3 660 660   1   1   5   2   3   3   2   4\n [253] 660   3   2   5 660   2   3   4   6   2   2   2 660   2 660   2 660   3\n [271]   3   2   2   4   3   1   4   2 660   2   4 660   6   2   3   1 660   2\n [289]   2 660   1   1   3   2   3   3   1 660   1   4   2   1   1   3   2   1\n [307]   2   3   1 660   2   3   3   2   1   2   3   5   5   1   2   3   3   1\n [325] 660 660   1   2   4 660   2   1   1   1   3   2   1   1   3   4 660   1\n [343]   2   1   1   3   3 660   1   1   3   5   3   2   3   4   1   4   3   1\n [361] 660   2   1   2   2   1   2   2   6   1   2   4   5 660   3   4   2   1\n [379]   1   4   2   1   1   1   1   2   1   4   4   1   3 660   3   3 660   2\n [397] 660   1   2   1   1   4   2   1   4   4 660   1   2 660   3   2   2   2\n [415]   1   4   3   6   1   2   3   1   3   2   2   2   1   1   3   2   1   1\n [433]   1   3   2   2 660   4   4   4   1   1 660   4   3 660   1   3   1   3\n [451]   2   4   2   2   2   3   2   1   4   3 660   1   4   3   1   3   2 660\n [469]   3 660   1   3   1   4   1   1   1   2   4   3   1   2   2   2   3   2\n [487]   3   1   1 660   3   2   1   1   2 660   2   2   2   3   3   1   1   2\n [505] 660   1   2   1   1   3   3   1   3   1   1   1   1   1   2   5   1   1\n [523]   2   2   1   1 660   1   4   1   2   4   1   3   2 660   1   1 660   2\n [541]   1   1   4   2   3   3   1   5   3   1   1   2 660   1   1   3   1   3\n [559]   2   4 660   2   3   2   1   2   1   1   1   2   2   3   1   5   2 660\n [577]   2 660   3   2   2   2   1   5   3   2   3   1 660   3   1   2   2   2\n [595]   1   2   2   4 660   6   1   2 660   1   1   2   2   3 660   3   2   3\n [613]   3   4   2 660   2 660   4 660   1   1   2   2   3   1   1   1   3 660\n [631]   2   5 660   7   1 660   4   3   3   1 660   1   1   1   1   3   2   4\n [649]   2   2   3 660 660   1   4   3   2   2   2   3   2   4   2   2   4 660\n [667] 660 660   6   3   3   1   4   4   2   1 660   1   6 660   3   3   2   1\n [685]   1   6 660   1   5   1 660   2   6   2 660   4   1   3   1   2 660   1\n [703]   1   3   1   2   4   2   1   3   2   4   3   2   2   1   1   5   6   4\n [721]   2   2   2   2   4 660   1   2   2   2   2   4   5 660 660 660   4   3\n [739]   3   3   2   4   2   4 660 660 660 660   2   1 660   2   4   3   2 660\n [757]   2   3   1   3   4 660   1   2   1   2 660   3   1   2   1   2   1   2\n [775]   1   2   2   2   2   1   1   3   3   1   3   4   3 660 660   4   2   3\n [793]   2   1   3   2   4   2   2   3   1   2   4   3   3   4 660   1   4   2\n [811]   1   1   1   3   1   5   2   2   4   2 660   1   3   1   2 660   1   2\n [829]   1   2   1 660   1   3   2   3   2 660   2   1   4   2 660 660 660   2\n [847]   4   2 660 660   3   1 660   5   5   2   2   2 660   2   1   3   1   3\n [865]   2   4   2   4 660   4   1   2   3   2   3   3   2   3   2   2   2   1\n [883]   3   2   4   2 660   3   3   2   2 660 660   3   2   1   2   4   1   1\n [901]   1   1   4   3   2 660   3   2 660   1 660   3   2   1   1   1   2 660\n [919]   2   2   3   3   2 660 660   4   5   2   2   2   1   2   3   1   3   3\n [937]   4   3 660   1   1   1 660   4   3   5   1   1   2 660   2   2   2   2\n [955]   5   2   2   3   1   2   3 660   1   2 660 660   2 660   3   1   1   2\n [973]   5   3   5   1   1   4 660   2   1   3   1   1   2   4   3   3   3 660\n [991]   1   1   2   2   1   1   2   2 660   2\n\nNa_count2&lt;-sum(is.na(data_na))\nNa_count2\n\n[1] 0\n\ncount_660 &lt;- sum(data_na==660)\ncount_660\n\n[1] 145",
    "crumbs": [
      "Assignment 1"
    ]
  }
]